str(myList)
print(myList)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.r,=FALSE)
rowMeans(m, na.rm=FALSE)
eigen(m)
typeof(m)
print(m)
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=3)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
eigen(m)
typeof(m)
n_dims <- 5
vec <- 1:n_dims^2
m <- matrix(data=vec,ncol=n_dims)
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
eigen(m)
typeof(m)
my_matrix <- list(matrix(1:8,nrow=4,byrow=TRUE)
str(myList)
print(myList)
my_matrix <- list(matrix(1:8,nrow=4,byrow=TRUE)
str(my_matrix)
print(my_matrix)
my_matrix <- matrix(data,byrow,nrow,ncol,dimnames)
my_matrix <- ,matrix(1:16,ncol = 4)
my_matrix <- matrix(1:16,ncol = 4)
View(m)
my_matrix <- matrix(1:16,ncol = 4 nrow=4)
my_matrix <- matrix(rand(1:16),ncol = 4 nrow=4)
my_matrix <- matrix(rand(1:13),ncol = 4 nrow=4)
my_matrix <- matrix(1:13),ncol = 4 nrow=4)
z <- 1:100
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
View(my_matrix)
my_logical <- (z<30)
print(my_logical)
b <- sample(100)
my_logical <- (sample()<30)
print(my_logical)
b <- sample(100)
my_logical <- (sample($$3)
print(my_logical)
b <- sample(100)
my_logical <- (sample($$3)
print(my_logical)
b <- sample(100)
my_logical <- (sample($/$3)
print(my_logical)
print(b)
my_logical <- (b$$3)
my_logical <- (b$/$3)
print(my_logical)
z <- 1:100
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b==3)
print(my_logical)
z <- 1:100
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
my_letter <- random(a:z)
my_letter <- sample(a:z)
a <- (A:Z)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
View(my_list)
str(my_list)
print(my_list)
e<- eigen(m)
typeof(e)
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
e<- eigen(m)
typeof(e)
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
eigen(m)
typeof(m)
typeof(evalue)
evalue <- eigen(m)
typeof(evalue)
View(e)
View(my_list)
my_matrix <- matrix(data=runif(),ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
my_matrix <- matrix(data=runif(),ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
my_matrix <- matrix(data=runif(100),ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
my_matrix <- matrix(data=runif(''),ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
my_matrix <- matrix(data=runif(1),ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
z <- sample(100)
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_logical,my_matrix,my_letter)
str(my_list)
print(my_list)
my_list[[2]]
my_list[[2]][[2]][[2]]
my_list[[2,2]][[2]][[2]]
my_list[2,2][2][2]
my_list[[2,2]]
my_list[[2]][[2,2]]
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
evalue <- eigen(m)
typeof(evalue)
z <- sample(100)
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_matrix,my_logical,my_letter)
str(my_list)
print(my_list)
my_list[[2,2]]
my_list[[2,2]][[2]][[2]]
my_list[2,2][[2]][[2]]
View(my_list)
my_list[2,2][[2]][[2]]-3
my_list[2,2]
my_list[[2,2]]
my_list[[my_matrix[2,2]]
my_list[my_matrix[2,2]]
my_list[[2]]
z <- sample(100)
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
a <- (a:z)
my_letter <- sample(letters[1:26])
my_list <- list(my_matrix,my_logical,my_letter)
str(my_list)
print(my_list)
my_list[[2,2]]
my_list[[2]][4,1]
my_list[2,2][[2]]
my_list[1[2,2]]
my_list2[2,2]
my_list$mylist2[2,2]
my_list$mylist2[2,2][[2]][[2]]
View(my_list)
my_list$mylist2[2,2][[2]][[2]]
my_list[2,2]
my_list[my_matrix[2,2]]
my_list[1[2,2]]
my_list[[1[2,2]]]
my_list[[1],[2,2]]
my_list[[1][2,2]]
my_list[[1]2,2]
my_list[[1]][2,2]
my_list$list1[[1]][2,2]
my_list$$list1[[1]][2,2]
list1$my_list[[1]][2,2]
list1 <- my_list[[1]][2,2]
list2 <- my_list[[2]][2]
list3 <- my_list[[3]][2]
typeof(list1)
typeof(list2)
typeof(list3)
final_list <- c(list1,list2,list3)
print(final_list)
typeof(final_list)
myuni <- runif(0:10,26)
myuni <- runif(0:10,x=26)
myuni <- runif(26,0,10)
my_letters <- sample(toupper[1:26])
my_letters <- sample(toupper(letters[1:26]))
u <- myuni(sample_n(nrows=4))
u <- myuni(sample_n(4))
myuni <- runif(26,0,10)
my_letters <- sample(toupper(letters[1:26]))
u <- myuni(sample_n(4))
df <- data.frame(myuni,my_letters)
View(df)
subset.data.frame(nrows=4)
subset.data.frame(4)
subset.data.frame(nrow(4))
subset(df,nrow(4))
subset(df,nrow=4))
my_data <- subset.data.frame(df,nrow(4))
?subset.data.frame
my_data <- subset.data.frame(df,subset = nrow(4))
my_data <- subset.data.frame(df,subset,nrow(4))
my_data <- subset.data.frame(df,subset=4)
View(df)
df[sample(1:26,4),1)
df[sample(1:26,4),1]
df[sample(1:26,4),1] <- NA
df[sample(1:26,4),2] <- NA
df[1,NA]
which(df[1,NA])
which(df==NA)
print(df)
which(df==NA)
which(df[1==NA])
which(df$demand==NA)
which(df$demand=='NA')
which(df$myuni==NA)
which(is.na(df$myuni))
new_order = sort(colnames(df))
df2 <- df[, new_order]
df2
View(df2)
View(df)
new_order = sort(df$my_letters(.)
df2 <- df[, new_order]
df2
View(df2)
which(is.na(df$myuni))
new_order = sort(colnames(df),decreasing=TRUE)
df2 <- df[, new_order]
df2
View(df2)
which(is.na(df$myuni))
new_order = sort(colnames(df),decreasing=TRUE)
df2 <- df[, new_order]
df2
View(df2)
new_order = sort(df$my_letters,ascending=TRUE)
df2 <- df[, new_order]
df2
View(df2)
myuni <- runif(26,0,10)
my_letters <- sample(toupper(letters[1:26]))
df <- data.frame(myuni,my_letters)
df[sample(1:26,4),1] <- NA
print(df)
which(is.na(df$myuni))
View(df)
new_order = sort(df$my_letters,ascending=TRUE)
new_order = sort(colnames(df))
View(df)
print(df)
new_order = sort(colnames(df$myuni))
print(df)
new_order = sort(colnames(df$myuni))
df2 <- df[, new_order]
df2
new_order = sort(colnames(df$myuni))
df2 <- df[, new_order]
df2
View(df2)
new_order = sort(colnames(df$myuni))
df2 <- df[new_order]
df2
new_order = sort(colnames(df$myuni))
df2 <- df[new_order]
df2
new_order = sort(colnames(df))
df2 <- df[new_order]
df2
print(df2)
new_order = sort(df,"myuni")
sort(df,"myuni")
new_order = sort(colnames(df))
df2 <- df[, new_order]
df2
View(df)
new_order = sort(colletters(df))
new_order = sort(colnames(df))
df2 <- df[, new_order]
df2
new_order = df = df.sort_values(by=['name'])
new_order = df = df.sort_values(by=['letter']
df = df.sort_values(by=['letter']
df = df.sort_values(by=['letter'])
sort.df <- with(df,  df[order(myuni),]
sort.df <- with(df,  df[order(myuni),)
df[with(df, order(col1, col2)),]
df[order(df$my_letters)]
df[order(df$my_letters),]
mean(df$myuni)
mean([df$myuni])
rowMeans([df$myuni])
rowMeans(df[myuni])
rowMeans(df, na.rm=T)
rowMeans(df, na.rm=muuni)
rowMeans(df$myuni,na.rm=T)
rowMeans(df)
rowMeans(rowMeans(df, na.rm=T)
print(means)
means <-rowMeans(df, na.rm=T)
rowMeans(df, na.rm=T)
rowMeans(df, na.rm=TRUE)
colMeans(df)
mean(df$myuni)
mean(df$myuni, na.rm=TRUE)
evalue <- eigen(m)
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
evalue <- eigen(m)
typeof(evalue) #complex values meaning they are imaginary
n_dims <- 5
vec <- 1:n_dims^2
sample(x=vec)
m <- matrix(data=vec,ncol=n_dims)
print(m)
t(m)
print(m)
rowSums(m, na.rm=FALSE)
rowMeans(m, na.rm=FALSE)
e <- eigen(m)
typeof(e)
e <- eigen(m)
print(e)
e <- eigen(m)
print(e)
typeof(e)
View(evalue)
typeof(m) #complex values meaning they are imaginary
typeof(e) #complex values meaning they are imaginary
z <- sample(100)
my_matrix <- matrix(data=z,ncol=4,nrow = 4)
b <- sample(100)
print(b)
my_logical <- (b>=25)
print(my_logical)
my_letter <- sample(letters[1:26])
print(my_letter)
my_list <- list(my_matrix,my_logical,my_letter)
str(my_list)
print(my_list)
library(tidyverse)
data("iris")
library(tidyverse)
data("iris")
force(iris)
View(iris)
iris<-data("iris")
class("iris")
library(tidyverse)
data("iris")
class("iris")
library(tidyverse)
data("iris")
class("iris")
force(iris)
View(iris)
iris1<-filter(iris, species %in% c("virginica", "versicolor"), Septal.length <6, Septal.width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Septal.length <6, Septal.width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.length <6, Sepal.width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length <6, Sepal.Width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length >6, Sepal.Width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length >6.0, Sepal.Width >2.5)
iris2<-filter(iris1,Species, Sepal.Length, Sepal.Width)
iris2<-filter(iris1, Species, Sepal.Length, Sepal.Width)
View(iris1)
iris2<-filter(iris1[,1:2,5]
iris2<-filter(iris1[,1:2,5])
iris2<-filter(iris1[,1:2:5])
iris2<-filter(iris1[,1:2,5])
iris2<-filter(iris1[5,1,2,])
iris2<-filter(iris1[,5,1,2,])
iris2<-select(iris1[5,1,2])
iris2<-select(iris1,5,1,2)
iris2<-filter(iris1, Species, Sepal.Length, Septal.Width)
iris2<-filter(iris1, (1,2,5))
iris2<-filter(iris1[1,2,5])
iris2<-select(iris1[1,2,5])
iris2<-select(iris1,1,2,5)
View(iris1)
iris2<-select(iris1, Species, Sepal.Length, Septal.Width)
iris2<-select(iris1, Species, Sepal.Length, Sepal.Width)
View(iris2)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length >6.0, Sepal.Width >2.5)
iris3<-arrange(iris2, by = desc(Sepal.Length))
View(iris3)
head(iris3)
data("iris")
force(iris)
View(iris)
library(tidyverse)
data("iris")
str("iris")
library(tidyverse)
data("iris")
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length >6.0, Sepal.Width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length > 6.0, Sepal.Width > 2.5)
iris2<-select(iris1, Species, Sepal.Length, Sepal.Width)
iris3<-arrange(iris2, by = desc(Sepal.Length))
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), &Sepal.Length > 6.0, &Sepal.Width > 2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"), Sepal.Length >6.0, Sepal.Width >2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor")&Sepal.Length > 6.0 &Sepal.Width > 2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor") & Sepal.Length > 6.0 & Sepal.Width > 2.5)
iris1<-filter(iris, Species %in% c("virginica", "versicolor")&Sepal.Length > 6.0 & Sepal.Width > 2.5)
library(tidyverse)
data("iris")
iris1<-filter(iris, Species %in% c("virginica", "versicolor")&Sepal.Length > 6.0 & Sepal.Width > 2.5)
iris2<-select(iris1, Species, Sepal.Length, Sepal.Width)
iris3<-arrange(iris2, by = desc(Sepal.Length))
head(iris3)
iris1<-filter(iris, Species %in% c("virginica", "versicolor")&Sepal.Length > 6 & Sepal.Width > 2.5)
iris2<-select(iris1, Species, Sepal.Length, Sepal.Width)
iris1<-filter(iris, Species %in% c("virginica", "versicolor")&Sepal.Length > 6 & Sepal.Width > 2.5)
View(iris2)
iris4<-mutate(iris3,Sepal.Area=Sepal.Length*Sepal.Width)
print(iris4)
View(iris4)
View(iris2)
View(iris3)
View(iris4)
iris4<-mutate(iris3,Sepal.Area=Sepal.Length*Sepal.Width)
iris1<-filter(iris, Species %in% c("virginica", "versicolor"),Sepal.Length > 6.0 ,Sepal.Width > 2.5)
iris5<-summarize(iris4,meanSepal.Length=mean(Sepal.Length, na.rm=TRUE),meanSepal.Width=mean(Sepal.Width, na.rm=TRUE),TotalNumber=n())
print(iris5)
iris6 <- group_by(iris4, Species) %>%
summarise(Avg.Sep.Lenght=mean(Sepal.Length),
Avg.Sep.Width=mean(Sepal.Width),
Sample.N=n())
print(iris6)
