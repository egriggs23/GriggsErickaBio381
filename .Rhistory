stat <- stat_function(aes(x = xval, y = ..y..), fun = dnorm, colour="red", n = length(z$myVar), args = list(mean = meanML, sd = sdML))
p1 + stat
pSpecial <- ggplot(data=z, aes(x=myVar/(max(myVar + 0.1)), y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2) +
xlim(c(0,1)) +
geom_density(size=0.75,linetype="dotted")
betaPars <- fitdistr(x=z$myVar/max(z$myVar + 0.1),start=list(shape1=1,shape2=2),"beta")
shape1ML <- betaPars$estimate["shape1"]
shape2ML <- betaPars$estimate["shape2"]
statSpecial <- stat_function(aes(x = xval, y = ..y..), fun = dbeta, colour="orchid", n = length(z$myVar), args = list(shape1=shape1ML,shape2=shape2ML))
pSpecial + statSpecial
library(ggplot2)
library(MASS)
z <- read.table("datapractice381.csv",header=TRUE,sep=",")
str(z)
summary(z)
z <- read.table("datapractice381.csv",header=TRUE)
str(z)
setwd("C:/Users/Ericka/Desktop/GriggsErickaBio381/mydata")
z <- read.table("datapractice381.csv",header=TRUE)
z <- read.table("datapractice381.csv",header=TRUE,sep=",")
str(z)
summary(z)
p1 <- ggplot(data=z, aes(x=myVar, y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2)
print(p1)
p1 <-  p1 +  geom_density(linetype="dotted",size=0.75)
print(p1)
normPars <- fitdistr(z$myVar,"normal")
print(normPars)
str(normPars)
normPars$estimate["mean"]
meanML <- normPars$estimate["mean"]
sdML <- normPars$estimate["sd"]
xval <- seq(0,max(z$myVar),len=length(z$myVar))
stat <- stat_function(aes(x = xval, y = ..y..), fun = dnorm, colour="red", n = length(z$myVar), args = list(mean = meanML, sd = sdML))
p1 + stat
expoPars <- fitdistr(z$myVar,"exponential")
rateML <- expoPars$estimate["rate"]
stat2 <- stat_function(aes(x = xval, y = ..y..), fun = dexp, colour="blue", n = length(z$myVar), args = list(rate=rateML))
p1 + stat + stat2
stat3 <- stat_function(aes(x = xval, y = ..y..), fun = dunif, colour="darkgreen", n = length(z$myVar), args = list(min=min(z$myVar), max=max(z$myVar)))
p1 + stat + stat2 + stat3
gammaPars <- fitdistr(z$myVar,"gamma")
shapeML <- gammaPars$estimate["shape"]
rateML <- gammaPars$estimate["rate"]
stat4 <- stat_function(aes(x = xval, y = ..y..), fun = dgamma, colour="brown", n = length(z$myVar), args = list(shape=shapeML, rate=rateML))
p1 + stat + stat2 + stat3 + stat4
pSpecial <- ggplot(data=z, aes(x=myVar/(max(myVar + 0.1)), y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2) +
xlim(c(0,1)) +
geom_density(size=0.75,linetype="dotted")
betaPars <- fitdistr(x=z$myVar/max(z$myVar + 0.1),start=list(shape1=1,shape2=2),"beta")
shape1ML <- betaPars$estimate["shape1"]
shape2ML <- betaPars$estimate["shape2"]
pSpecial <- ggplot(data=z, aes(x=myVar/(max(myVar + 0.1)), y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2) +
xlim(c(0,1)) +
geom_density(size=0.75,linetype="dotted")
betaPars <- fitdistr(x=z$myVar/max(z$myVar + 0.1),start=list(shape1=1,shape2=2),"beta")
shape1ML <- betaPars$estimate["shape1"]
shape2ML <- betaPars$estimate["shape2"]
statSpecial <- stat_function(aes(x = xval, y = ..y..), fun = dbeta, colour="orchid", n = length(z$myVar), args = list(shape1=shape1ML,shape2=shape2ML))
pSpecial + statSpecial
statSpecial <- stat_function(aes(x = xval, y = ..y..), fun = dbeta, colour="orchid", n = length(z$myVar), args = list(shape1=shape1ML,shape2=shape2ML))
pSpecial + statSpecial
beta<-rbeta(405, shape1ML, shape2ML, ncp = 0)
z <- data.frame(1:405,beta)
names(z) <- list("ID","myVar")
z <- z[z$myVar>0,]
str(z)
summary(z$myVar)
p1 <- ggplot(data=z, aes(x=myVar, y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2)
print(p1)
p1 <-  p1 +  geom_density(linetype="dotted",size=0.75)
print(p1)
normPars <- fitdistr(z$myVar,"normal")
print(normPars)
str(normPars)
normPars$estimate["mean"]
meanML <- normPars$estimate["mean"]
sdML <- normPars$estimate["sd"]
xval <- seq(0,max(z$myVar),len=length(z$myVar))
stat <- stat_function(aes(x = xval, y = ..y..), fun = dnorm, colour="red", n = length(z$myVar), args = list(mean = meanML, sd = sdML))
p1 + stat
pSpecial <- ggplot(data=z, aes(x=myVar/(max(myVar + 0.1)), y=..density..)) +
geom_histogram(color="grey60",fill="cornsilk",size=0.2) +
xlim(c(0,1)) +
geom_density(size=0.75,linetype="dotted")
betaPars <- fitdistr(x=z$myVar/max(z$myVar + 0.1),start=list(shape1=1,shape2=2),"beta")
shape1ML <- betaPars$estimate["shape1"]
shape2ML <- betaPars$estimate["shape2"]
statSpecial <- stat_function(aes(x = xval, y = ..y..), fun = dbeta, colour="orchid", n = length(z$myVar), args = list(shape1=shape1ML,shape2=shape2ML))
pSpecial + statSpecial
data("ToothGrowth")
force(ToothGrowth)
View(ToothGrowth)
library(sqldf)
library(dplyr)
library(tidyverse)
library(ggplot2)
data("PlantGrowth")
View(ToothGrowth)
data("PlantGrowth")
force(PlantGrowth)
View(PlantGrowth)
data("PlantGrowth")
z<-PlantGrowth
View(z)
library(readr)
datapractice381 <- read_csv("mydata/datapractice381.csv")
View(datapractice381)
#Load in Data and Clean
get_data <- {function(file_name=(PlantGrowth))
}
d_frame <- read.table(file="Plant Growth",
header=TRUE,
sep=",")
d_frame <- read.table(file="PlantGrowth",
header=TRUE,
sep=",")
d_frame <- read.table(file="PlantGrowth",
header=TRUE,
sep=",")
d_frame <- data("PlantGrowth")
return(data_frame)
m
d_frame <- data(file="PlantGrowth")
d_frame <- data(file_name="PlantGrowth")
return(data_frame)
View(datapractice381)
View(z)
summary(z)
z<-PlantGrowth
z<-df <- data.frame("PlantGrowth",Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)PlantGrowth
View(z)
get_data <- data("PlantGrowth")
get_data %>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
force(PlantGrowth)
z <-get_data %>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
library(sqldf)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(plotly)
z <-get_data %>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
#Load in Data and Clean
get_data <- data("PlantGrowth")
z <-get_data %>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
#Load in Data and Clean
get_data <- {data("PlantGrowth")
z <-get_data %>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
}
df%>% pivot_longer(cols=c('ctrl', 'trt1', 'trt2'),names_to='Treatment',values_to='Weight')
df <- data.frame(ctrl,trt1,trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
#Load in Data and Clean
df <- {data("PlantGrowth")
df <- data.frame(ctrl,trt1,trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
}
data("PlantGrowth")
z<-PlantGrowth
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
=
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
data("PlantGrowth")
z<-PlantGrowth
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
=
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
l
#Load in Data and Clean
data("PlantGrowth")
#Load in Data and Clean
get_data <- {data("PlantGrowth")
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
=
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
Treatment2 <- filter(z, group=="trt2")
View(z)
Treatment2 <- filter(z, group=="trt2")
stringsAsFactors
library(sqldf)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(plotly)
#Load in Data and Clean
get_data <- {data("PlantGrowth")
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
=
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
}
get_data <- {data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
}
get_data <- {data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
}
#Load in Data and Clean
get_data <- data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
#Load in Data and Clean
get_data <- data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
#Load in Data and Clean
get_data <- data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
View(Treatment1)
View(Treatment2)
View(ControlData)
#Load in Data and Clean
get_data <- data("PlantGrowth"),
ControlData <- filter(z,group=="ctrl"),
Treatment1 <- filter(z,group=="trt1"),
Treatment2 <- filter(z, group=="trt2"),
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE),
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
d_frame <- data("PlantGrowth",
header=TRUE,
sep=",")
return(data_frame)
d_frame <- read.data("PlantGrowth",
header=TRUE,
sep=",")
d_frame <- read.data("PlantGrowth",
header=TRUE,
sep=",")
d_frame <- data("PlantGrowth",
}
return(data_frame)
}
d_frame <- data("PlantGrowth",filter(z,group=="ctrl")
}
return(data_frame)
}
d_frame <- data("PlantGrowth",filter(z,group=="ctrl")
}
return(data_frame)
}
d_frame <- data("PlantGrowth",filter(z,group=="ctrl")
}
return(data_frame)
}
#Load in Data and Clean
get_data <- table(PlantGrowth$group)
#Load in Data and Clean
get_data <- data("PlantGrowth")
get_data <- function(PlantGrowth) {
data <- (temp_F - 32) * 5 / 9
return(temp_C)
}
View(get_data)
#Load in Data and Clean
get_data <- function(PlantGroth) {
data <- (PlantGroth - 32) * 5 / 9
return(temp_C)
}
df <- ControlData <- filter(z,group=="ctrl"),
return(temp_C)
df <- ControlData <- filter(z,group=="ctrl"),
return(df)
df <- ControlData <- filter(z,group=="ctrl"),
return(PlantGrowth)
#Load in Data and Clean
get_data <- function(PlantGrowth) {
df <- ControlData <- filter(z,group=="ctrl"),
return(PlantGrowth)
}
df <- ControlData <- filter(z,group=="ctrl"),
return(PlantGrowth)
df <- ControlData <- filter(z,group=="ctrl")
return(PlantGrowth)
#Load in Data and Clean
get_data <- function(PlantGrowth) {
df <- ControlData <- filter(z,group=="ctrl")
return(PlantGrowth)
}
#Load in Data and Clean
get_data <- function(PlantGrowth) {
return(PlantGrowth)
}
Treatment1 <- filter(z,group=="trt1")
mean(ControlData$weight)
t
get_mean <- function(ControlData <- filter(z,group=="ctrl")
mean(ControlData$weight)
et_mean <- {function(NULL)
ControlData <- filter(z,group=="ctrl")
mean(ControlData$weight)
sd(ControlData$weight)
get_mean <- {function(mean())
ControlData <- filter(z,group=="ctrl")
mean(ControlData$weight)
sd(ControlData$weight)
get_mean <- {function(mean())
fahrenheit_to_kelvin <- function(temp_F) {
temp_C <- fahrenheit_to_celsius(temp_F)
temp_K <- celsius_to_kelvin(temp_C)
return(temp_K)
}
temp_K <- celsius_to_kelvin(temp_C)
}
temp_C <- (temp_F - 32) * 5 / 9
fahrenheit_to_celsius <- function(temp_F) {
temp_C <- (temp_F - 32) * 5 / 9
return(temp_C)
}
View(fahrenheit_to_celsius)
cleandata <- (ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2"))
get_data <- function(PlantGrowth) {
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2"))
cleandata <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
return(cleandata)
}
get_data <- function(PlantGrowth) {
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2"))
cleandata <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
return(cleandata)
}
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2"))
Treatment2 <- filter(z, group=="trt2")
cleandata <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
get_data <- function(PlantGrowth) {
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)
}
View(get_data)
get_data <- function(PlantGrowth) {
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)
}
View(get_data)
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
Treatment2 <- filter(z, group=="trt2"),
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
get_data <- function(PlantGrowth) {
ControlData <- filter(z,group=="ctrl")
Treatment1 <- filter(z,group=="trt1")
Treatment2 <- filter(z, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
data("PlantGrowth")
z<-PlantGrowth
str(z$group)
summary(z)
ControlData <- filter(z,group=="ctrl")
mean(ControlData$weight)
sd(ControlData$weight)
Treatment1 <- filter(z,group=="trt1")
mean(Treatment1$weight)
sd(Treatment1$weight)
Treatment2 <- filter(z, group=="trt2")
mean(Treatment2$weight)
sd(Treatment2$weight)
Ctrl <- rnorm(n=10, mean=5.032, sd
=0.58)
Trt1 <- rnorm(n=10, mean=4.66, sd
=0.79)
Trt2 <- rnorm(n=10, mean=5.526, sd
=0.44)
df <- data.frame(Ctrl,Trt1,Trt2, stringsAsFactors = FALSE)
dff <- df %>% pivot_longer(cols=c('Ctrl', 'Trt1', 'Trt2'),names_to='Treatment',values_to='Weight')
#preliminary calls global variable
z<-data("PlantGrowth")
#preliminary calls global variable
z<-data("PlantGrowth")
#preliminary calls global variable
z<-data("PlantGrowth")
x <- get_data(z)
get_data <- function(p) {
ControlData <- filter(p,group=="ctrl")
Treatment1 <- filter(p,group=="trt1")
Treatment2 <- filter(p, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)
return(cleandata))
get_data <- function(p) {
ControlData <- filter(p,group=="ctrl")
Treatment1 <- filter(p,group=="trt1")
Treatment2 <- filter(p, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata))
}
x <- get_data(z)
return(cleandata)}
get_data <- function(p) {
ControlData <- filter(p,group=="ctrl")
Treatment1 <- filter(p,group=="trt1")
Treatment2 <- filter(p, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)}
x <- get_data(z)
library(sqldf)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(plotly)
data("PlantGrowth")
z<-PlantGrowth
str(z$group)
summary(z)
ControlData <- filter(z,group=="ctrl")
mean(ControlData$weight)
sd(ControlData$weight)
Treatment1 <- filter(z,group=="trt1")
mean(Treatment1$weight)
sd(Treatment1$weight)
Treatment2 <- filter(z, group=="trt2")
mean(Treatment2$weight)
sd(Treatment2$weight)
ControlData <- filter(p,group=="ctrl")
View(ControlData)
View(PlantGrowth)
get_data <- function(file_name=NULL) {
d_frame <- read.table(file=file_name,
header=TRUE,
sep=",")
}
return(data_frame)
}
get_data <- function(file_name=NULL) {
d_frame <- read.table(file=file_name,
header=TRUE,
sep=",")
}
return(data_frame)
d_frame <- read.table(file=file_name,
header=TRUE,
sep=",")
}
return(data_frame)
get_data <- function(file_name=NULL) {
d_frame <- read.table(file=file_name,
header=TRUE,
sep=",")
return(data_frame)}
get_data <- function(file_name=NULL) {
d_frame <- read.table(file=file_name,
header=TRUE,
sep=",")
return(data_frame)}
cleandata <- function(d_frame) {
ControlData <- filter(d_frame,group=="ctrl")
Treatment1 <- filter(d_frame,group=="trt1")
Treatment2 <- filter(d_frane, group=="trt2")
cleandata <- data.frame(ControlData,Treatment1,Treatment2, stringsAsFactors = FALSE)
return(cleandata)}
View(cleandata)
View(get_data)
source("hw9_functions.R")
get_data(source("hw9_functions.R"))
source("hw9_functions.R")
get_data(source("hw9_functions.R"))
force(PlantGrowth)
source("hw9_functions.R")
cleandata()
get_data(source("hw9_functions.R"))
View(get_data)
View(cleandata)
